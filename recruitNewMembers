Suppose you are a manager as a big firm and now are looking for new members for your team. 
You sent out an advertisement and have received a few applications. You have a habit of scoring people on a scale of 100. 
You have given scores to all the members of your team and the new applications. 
The process of selection is going to be very straightforward if the applicant improves the average of the team then you hire the 
applicant to join the team or else reject the application. Remember the order of processing applications is going to be important here.



You may see this as an extension of the previous problem, which it is. You may use the code written in the previous question as a function to improve the code quality.



----------------------------------------------------------------------

Input:

Two lists on two separate lines.

The first line will have the list of scores of current team members

The second line will have the list of scores of the applicants.



Output:

The list consisting of scores of the final team after hiring from the pool of applicants.



----------------------------------------------------------------------

Sample input:

[23,45,34,76]

[70,34,94]



Sample output:

[23, 45, 34, 76, 70, 94]



--------------------------------------------------------------------------------------------------------------------------------------------
import ast

input_list1 = ast.literal_eval(input())
input_list2 = ast.literal_eval(input())
# final_list = input_list1


for i in input_list2:
    sum_list = (sum(input_list1))
    len_list =len(input_list1)
    avg_list = sum_list/len_list
    
    if(avg_list < (sum_list + i)/(len_list + 1) ):
        input_list1.append(i)
    
print(input_list1)   


